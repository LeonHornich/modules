// TODO nf-core: Once you have added the required tests, please run the following command to build this file:
// nf-core modules test unicycler
nextflow_process {

    name "Test Process UNICYCLER"
    script "../main.nf"
    process "UNICYCLER"

    tag "modules"
    tag "modules_nfcore"
    tag "unicycler"

    test("bacteroides_fragilis - illumina - single end") {

        when {
            process {
                """
                input[0] = [ [ id:'test', single_end:true ], // meta map
                             [ file(params.test_data['bacteroides_fragilis']['illumina']['test1_1_fastq_gz'], checkIfExists: true) ],
                              []
                            ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

    test("bacteroides_fragilis - illumina - paired end") {

        when {
            process {
                """
                input[0] = [ [ id:'test', single_end:false ], // meta map
                             [ file(params.test_data['bacteroides_fragilis']['illumina']['test1_1_fastq_gz'], checkIfExists: true),
                               file(params.test_data['bacteroides_fragilis']['illumina']['test1_2_fastq_gz'], checkIfExists: true) ],
                               []
                        ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
                //TODO nf-core: Add all required assertions to verify the test output.
            )
        }

    }

    test("bacteroides_fragilis - shortread_longreads") {

        when {
            process {
                """
                input[0] = [ [ id:'test', single_end:false ], // meta map
                             [ file(params.test_data['bacteroides_fragilis']['illumina']['test1_1_fastq_gz'], checkIfExists: true),
                               file(params.test_data['bacteroides_fragilis']['illumina']['test1_2_fastq_gz'], checkIfExists: true) ],
                             [ file(params.test_data['bacteroides_fragilis']['nanopore']['test_fastq_gz'], checkIfExists: true)]
                        ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

}
